{"remainingRequest":"/root/vuehcovdb/node_modules/thread-loader/dist/cjs.js!/root/vuehcovdb/node_modules/babel-loader/lib/index.js!/root/vuehcovdb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/vuehcovdb/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/vuehcovdb/src/views/Results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/vuehcovdb/src/views/Results.vue","mtime":1631213237116},{"path":"/root/vuehcovdb/node_modules/cache-loader/dist/cjs.js","mtime":1631213235484},{"path":"/root/vuehcovdb/node_modules/thread-loader/dist/cjs.js","mtime":1631213236864},{"path":"/root/vuehcovdb/node_modules/babel-loader/lib/index.js","mtime":1631213235420},{"path":"/root/vuehcovdb/node_modules/cache-loader/dist/cjs.js","mtime":1631213235484},{"path":"/root/vuehcovdb/node_modules/vue-loader/lib/index.js","mtime":1631213236960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Results.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<section style=\"padding: 4rem 2rem\">\n<h5><a href=\"/\">\n  <i class=\"fa fa-home\"></i> Home</a>&nbsp;<i class=\"fas fa-chevron-right\"></i>&nbsp;\n  <a href=\"#/search\"><i class=\"fa fa-database\"></i> hCoronavirusesDB</a>&nbsp;<i class=\"fas fa-chevron-right\"></i>\n  Found {{viruses ? viruses.length : \"...\"}} results <span v-if=\"search_type=='accession'\">for the accession number {{accession_num}}</span></h5>\n  <div v-if=\"search_type=='custom'\">\n        Search criteria: \n        <span class=\"badge badge-primary\">{{specimen.split(\"_\")[0]}}</span>&nbsp;\n        <span class=\"badge badge-success\">{{sequence_type == \"prot\" ? \"Proteins\" : \"Genes\"}}</span>\n        <span class=\"badge badge-light\">Gene Symbols:</span>&nbsp;<span class=\"crit\">{{gene_symbols ? gene_symbols.join(\", \") : \"(Any)\"}}</span>&nbsp;\n        <span class=\"badge badge-light\">Proteins:</span>&nbsp;<span class=\"crit\">{{proteins ? proteins.join(\", \") : \"(Any)\"}}</span>&nbsp;\n        <span class=\"badge badge-light\">Hosts:</span>&nbsp;<span class=\"crit\">{{hosts ? hosts.join(\", \") : \"(Any)\"}}</span>&nbsp;\n        <span class=\"badge badge-light\">Countries:</span>&nbsp;<span class=\"crit\">{{countries ? countries.join(\", \") : \"(Any)\"}}</span>&nbsp;\n        <span class=\"badge badge-light\">Collection Dates:</span>&nbsp;<span class=\"crit\">{{years ? years.join(\", \") : \"(Any)\"}}</span>\n        </div>\n<br>\n\n<div v-if=\"isLoadingResult\" style=\"text-align: center\">\n    <br />\n    <hollow-dots-spinner\n        :animation-duration=\"1000\"\n        :dot-size=\"20\"\n        :dots-num=\"3\"\n        color=\"#00d961\"\n        style=\"margin-left: auto; margin-right: auto;\"\n    />\n    <br />\n    <span class=\"badge badge-success\">Loading Results...</span>\n</div>\n<div v-if=\"!isLoadingResult\">\n<ul class=\"nav nav-tabs\" id=\"mainTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Results (Table)</a>\n  </li>\n  \n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"hist-tab\" data-toggle=\"tab\" href=\"#hist\" role=\"tab\" aria-controls=\"hist\" aria-selected=\"false\">Collection Date Distribution</a>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"mainTabContent\">\n  <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n    <br>\n    <section>\n    <table id=\"myTable\" class=\"display nowrap table\" style=\"width:100%\">\n        <thead>\n        <tr>\n            <th><input type=\"checkbox\" id=\"selectAllGenes\" /></th>\n            <th>id</th>\n            <th>Gene Product<br> Name</th>\n            <th>Gene<br> Symbol</th>\n            <th>GenBank Genome<br> Accession</th>\n            <th>GenBank Protein<br> Aaccession</th>\n            <th>Strain Name</th>\n            <th>Collection<br> Date</th>\n            <th>Host</th>\n            <th>Country</th>\n            <th>Sequence</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"virus in viruses\" v-bind:key=\"virus.id\">\n            <td></td>\n            <td>{{ virus.id }}</td>\n            <td>{{ virus.gene_product_name }}</td>\n            <td>{{ virus.gene_symbol }}</td>\n            <td>{{ virus.genbank_genome_accession }}</td>\n            <td>{{ virus.genbank_protein_accession }}</td>\n            <td>{{ virus.strain_name }}</td>\n            <td>{{ virus.collection_date }}</td>\n            <td>{{ virus.host }}</td>\n            <td>{{ virus.country }}</td>\n            <td>{{ virus.fasta }}</td>\n        </tr>\n        </tbody>\n    </table>\n    <br>\n    <br>\n\n    <button @click=\"configureMview()\" type=\"button\" class=\"btn btn-primary\">\n      <i class=\"fas fa-align-center\"></i> Multiple Sequence Alignment (ClustalOmega)\n    </button>\n    &nbsp;\n    <button  @click=\"downloadSelected()\" id=\"download\" type=\"button\" class=\"btn btn-primary\">\n      <i class=\"fa fa-download\"></i> Download Selected Genes</button>\n   </section>\n   &nbsp;\n\n   \n\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"modalConfig\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Configure ClustalOmega Sequence Alignment</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <input id=\"chkConsensus\" type=\"checkbox\" v-model=\"mview_consensus\" />&nbsp;<label for=\"chkConsensus\">Show Consensus</label>\n          <div>Select the reference sequence:</div>\n          <div v-for=\"r in selectedRows\" v-bind:key=\"r.id\">\n            <input type=\"radio\" v-bind:value=\"r.id\" name=\"referenceForMview\"> {{r.title}}\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" @click=\"msaMuscleLink('mview')\" class=\"btn btn-primary\" data-dismiss=\"modal\">Run Alignment</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  </div>\n  <div class=\"tab-pane fade\" id=\"map\" role=\"tabpanel\" aria-labelledby=\"map-tab\" style=\"width:100%\">\n    <br>\n    <div v-if=\"chartTableData\" class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-lg-9\">\n        <GChart ref=\"gchartMap\" v-if=\"chartData\" :resizeDebounce=\"500\" type=\"GeoChart\" :data=\"chartData\" :options=\"chartOptions\" :settings=\"{packages: ['corechart', 'table'], mapsApiKey:'AIzaSyCqaPSmctfwgNKG5GE2DN3JMMGYDFItgQQ'}\"/>\n        </div>\n        <div class=\"col-xs-12 col-sm-12 col-lg-3\">\n            <table class=\"table table-sm\" id=\"seqTable\">\n                <thead>\n                    <tr>\n                    <th>Country</th>\n                    <th>Sequence Count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(val, key) in chartTableData\" v-bind:key=\"key\" :class=\"{'table-secondary':(key == 'Unknown')}\">\n                        <td>{{key}} ({{country_codes[key]}})</td>\n                        <td>{{val}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"hist\" role=\"tabpanel\" aria-labelledby=\"hist-tab\" style=\"width:100%\">\n    <br>\n    <div v-if=\"yearData\" class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-lg-9\">\n        <GChart ref=\"gchartHist\" v-if=\"yearData\" type=\"ColumnChart\" :data=\"yearData\" :options=\"chartOptions\" :settings=\"{packages: ['corechart']}\"/>\n        </div>\n        <div class=\"col-xs-12 col-sm-12 col-lg-3\">\n            <table class=\"table table-sm\" id=\"yearTable\">\n                <thead>\n                    <tr>\n                    <th>Year</th>\n                    <th>Sequence Count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"data in yearData.slice(1)\" v-bind:key=\"data[0]\" :class=\"{'table-secondary':(data[0] == 'N/A')}\">\n                        <td>{{data[0]}}</td>\n                        <td>{{data[1]}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n  </div>\n</div>\n\n</div>\n\n</section>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { GChart } from 'vue-google-charts'\nimport { HollowDotsSpinner } from 'epic-spinners'\nimport { saveAs } from 'file-saver';\n\nexport default {\n  name: \"results\",\n  components: {\n    GChart,\n    HollowDotsSpinner\n  },\n  props: ['search_type', 'sequence_type', 'accession_num', 'specimen', 'gene_symbols', 'proteins', 'hosts', 'countries', 'years'],\n  data () {\n    return {\n        mview_consensus: false,\n        mview_reference: -1,\n        selectedRows: [],\n        viruses: null,\n        genesTable: null,\n        chartData: [['Country', 'Popularity']],\n        chartTableData: false,\n        chartOptions: {\n          height: 600,\n          datalessRegionColor: \"#fcfcfc\",\n          colorAxis: {colors: ['lightblue', 'green']}\n        },\n        yearData: false,\n        isLoadingResult: true,\n        country_codes: {null: 'Unknown', 'Unknown': 'Unknown', 'Afghanistan': 'AF', 'Albania': 'AL', 'Algeria': 'DZ', 'Angola': 'AO', 'Argentina': 'AR', 'Australia': 'AU', \n          'Austria': 'AT', 'Azerbaijan': 'AZ', 'Bahrain': 'BH', 'Bangladesh': 'BD', 'Belarus': 'BY', 'Belgium': 'BE', 'Belize': 'BZ', \n          'Benin': 'BJ', 'Bolivia': 'BO', 'Bosnia_and_Herzegovina': 'BA', 'Botswana': 'BW', 'Brazil': 'BR', 'Brunei': 'BN', 'Bulgaria': 'BG',\n          'Burkina_Faso': 'BF', 'Cambodia': 'CO', 'Cameroon': 'CM', 'Canada': 'CA', 'Central_African_Republic': 'CF', 'Chile': 'CL',\n          'China': 'CN', 'Colombia': 'CO', 'Cote_dIvoire': 'CI', 'Croatia': 'HR', 'Cyprus': 'CY', 'Czech_Republic': 'CZ',\n          'Democratic_Republic_of_the_Congo': 'CD', 'Denmark': 'DK', 'Dominican_Republic': 'DO', 'Ecuador': 'EC', 'Egypt': 'EG', 'Equatorial_Guinea': 'GQ',\n          'Estonia': 'EE', 'Ethiopia': 'ET', 'Finland': 'FI', 'France': 'FR', 'Gabon': 'GA', 'Gambia': 'GM', 'Germany': 'DE', 'Ghana': 'GH',\n          'Gibraltar': 'GI', 'Greece': 'GR', 'Guam': 'GU', 'Guyana': 'GY', 'Honduras': 'HN', 'Hong_Kong': 'HK', 'Hungary': 'HU', 'India': 'IN',\n          'Indonesia': 'ID', 'Iran': 'IR', 'Iraq': 'IQ', 'Ireland': 'IE', 'Israel': 'IL', 'Italy': 'IT', 'Japan': 'JP', 'Kazakhstan': 'KZ', 'Kenya': 'KE',\n          'Korea': 'KP', 'Kyrgyzstan': 'KZ', 'Laos': 'LA', 'Latvia': 'LV', 'Lebanon': 'LB', 'Lesotho': 'LS', 'Liberia': 'LR', 'Libya': 'LY', 'Lithuania': 'LT',\n          'Luxembourg': 'LU', 'Macedonia': 'MK', 'Malawi': 'MW', 'Malaysia': 'MY', 'Mali': 'ML', 'Mauritania': 'MR', 'Mayotte': 'YT', 'Mexico': 'MX',\n          'Moldova': 'MD', 'Mongolia': 'MN', 'Morocco': 'MA', 'Mozambique': 'MZ', 'Myanmar': 'MM', 'Namibia': 'NA', 'Nepal': 'NP', 'Netherlands': 'NL',\n          'New_Zealand': 'NZ', 'Niger': 'NE', 'Nigeria': 'NG', 'Norway': 'NO', 'Oman': 'OM', 'Pakistan': 'PK', 'Palau': 'PW', 'Panama': 'PA',\n          'Papua_New_Guinea': 'PG', 'Peru': 'PE', 'Philippines': 'PH', 'Poland': 'PL', 'Portugal': 'PT', 'Qatar': 'QA', 'Republic_of_the_Congo': 'CD',\n          'Romania': 'RO', 'Russia': 'RU', 'Rwanda': 'RW', 'Senegal': 'SN', 'Serbia': 'RS', 'Serbia_and_Montenegro': 'ME', 'Seychelles': 'SC',\n          'Sierra_Leone': 'SL', 'Singapore': 'SG', 'Slovenia': 'SI', 'Somalia': 'SO', 'South_Africa': 'ZA', 'South_Korea': 'KR', 'Spain': 'ES',\n          'Sri_Lanka': 'LK', 'Sudan': 'SD', 'Swaziland (Eswatani)': 'SZ', 'Sweden': 'SE', 'Switzerland': 'CH', 'Syria': 'SY', 'Taiwan': 'TW', 'Thailand': 'TH',\n          'Togo': 'TG', 'Tunisia': 'TN', 'Turkey': 'TR', 'Uganda': 'UG', 'Ukraine': 'UA', 'United_Arab_Emirates': 'AE', 'United_Kingdom': 'GB', 'Uruguay': 'UY',\n          'USA': 'US', 'Uzbekistan': 'UZ', 'Viet_Nam': 'VN', 'West_Bank': 'PS', 'Zambia': 'ZM', 'Zimbabwe': 'ZW'},\n    }\n  },\n  created () {\n    this.fetchData();\n  },\n  updated: function () {\n    $.fn.dataTable.ext.errMode = 'none';\n\n    var genesTable = $('#myTable').DataTable({\n      columnDefs: [ {\n        orderable: false,\n        className: 'select-checkbox',\n        targets: 0\n      },\n      {\n        targets: [ 1, 10 ],\n        visible: false,\n        searchable: false\n      }\n      ],\n      select: {\n          style:    'multi',\n          selector: 'td:first-child'\n      },\n      order: [[ 2, \"asc\" ]],\n      responsive: true\n    });\n\n    this.genesTable = genesTable;\n\n    $('#seqTable').DataTable({\n      order: [[ 1, \"desc\" ]],\n      \"dom\": '<\"toolbar\">',\n      \"paging\": false,\n    });\n\n    $('#yearTable').DataTable({\n      order: [[ 1, \"desc\" ]],\n      \"dom\": '<\"toolbar\">',\n      \"paging\": false,\n    });\n\n\n    $(\"#selectAllGenes\").click( function(e) {\n        if ($(this).is( \":checked\" )) {\n            genesTable.rows().select();\n        } else {\n            genesTable.rows().deselect(); \n        }\n    });\n\n\n    $('#hist-tab').on('click', e=> {\n      setTimeout(()=>{\n        this.$refs.gchartHist.drawChart();\n      }, 500);\n    })\n\n    $('#map-tab').on('click', e=> {\n      setTimeout(()=>{\n        this.$refs.gchartMap.drawChart();\n      }, 500);\n    })\n  },\n  watch: {\n\n  },\n  methods: {\n    fetchData(){\n        switch(this.search_type)\n        {\n        case \"accession\":\n            this.getVirusesByAccession(this.accession_num)\n            break;\n        case \"custom\":\n            this.getVirusesCustom()\n            break;\n        }\n    },\n    msaMuscleLink(algo) {\n      var ids = [];\n      var selected = this.genesTable.rows('.selected').data();\n\n      if(selected.length < 2) {\n        alert(\"Please select at least 2 sequence from the table.\")\n        return false;\n      } else if (selected.length > 10) {\n        alert(\"You can select a maximum of 10 sequences for the alignment.\")\n        return false;\n      }\n\n      for (var i = 0; i < selected.length; i++) {\n        ids.push(parseInt(selected[i][1]));\n      }\n\n      if(algo == \"mview\") {\n        var refid = parseInt($(\"input:radio[name=referenceForMview]:checked\").val());\n        if(refid) {\n          var index = ids.indexOf(refid);\n          if (index !== -1) ids.splice(index, 1);\n          ids.unshift(refid);\n        }\n      }\n\n      var link;\n      if(algo == \"mview\" && this.mview_consensus) {\n        link = this.$router.resolve({ path: 'msa', query: {algo: algo, ids: ids, consensus: this.mview_consensus } });\n      } else {\n        link = this.$router.resolve({ path: 'msa', query: {algo: algo, ids: ids } });\n      }\n      window.open(link.href, '_blank');\n    },\n    configureMview(){\n      var rows = [];\n      var ids = [];\n      var selected = this.genesTable.rows('.selected').data();\n\n      if(selected.length < 2) {\n        alert(\"Please select at least 2 sequence from the table.\")\n        return false;\n      } else if (selected.length > 10) {\n        alert(\"You can select a maximum of 10 sequences for the alignment.\")\n        return false;\n      }\n\n      for (var i = 0; i < selected.length; i++) {\n        rows.push({id: parseInt(selected[i][1]), \n          title: selected[i][4]});\n      }\n\n      this.selectedRows = rows;\n\n      $('#modalConfig').modal('toggle')\n    },\n    downloadSelected() {\n      var fasta = [];\n      var selected = this.genesTable.rows('.selected').data();\n\n      if(selected.length == 0) {\n        alert(\"Please select at least 1 sequence from the table.\")\n        return;\n      }\n\n      for (var i = 0; i < selected.length; i++) {\n        fasta.push(selected[i][10].replace(\"&gt;\", \">\"));\n      }\n\n      var blob = new Blob([fasta.join(\"\\n\")], {type: \"text/plain;charset=utf-8\"});\n      saveAs(blob, \"hCovdb_records.fasta\");\n    },\n    getVirusesByAccession(accessionNum) {\n        axios.get(\"/api/viruses/search/by_accession/\" + accessionNum).then(response=>{\n            this.viruses = response.data;\n            this.isLoadingResult = false;\n            this.buildGeoMap();\n        })\n    },\n    getVirusesCustom() {\n      axios.post(\"/api/viruses/search/by_criteria/\" + this.sequence_type + \"/\" + this.specimen, {\n        gene_symbol: this.gene_symbols,\n        protein: this.proteins,\n        host: this.hosts,\n        country: this.countries,\n        collection_date: this.years,\n      }).then(response=>{  \n        this.viruses = response.data;\n        this.isLoadingResult = false;\n        this.buildGeoMap();\n      })\n    },\n    buildGeoMap() {\n        var results = [['Country', 'Sequences']];\n        var yearHist = [['Collection Date', 'Sequences']];\n        var counts = {};\n        var yearCounts = {};\n        var tableCounts = {};\n\n        for(var v of this.viruses) {\n          var country_code = this.country_codes[v.country];\n          var country_name = v.country == null ? \"Unknown\" : v.country;\n          var year = v.collection_date;\n          year = year == null ? \"Unknown\" : year;\n\n          if(country_code in counts) {\n            counts[country_code]++;\n            tableCounts[country_name]++;\n          }\n          else\n          {\n            counts[country_code] = 1;\n            tableCounts[country_name] = 1;\n          }\n\n          // Year data\n          if(year in yearCounts) {\n            yearCounts[year]++;\n          } else {\n            yearCounts[year] = 1;\n          }\n        }\n\n        for(var k in counts) {\n          results.push([k, counts[k]])\n        }\n        \n        for(var k in yearCounts) {\n          yearHist.push([k, yearCounts[k]])\n        }\n\n        this.chartData = results;\n        this.chartTableData = tableCounts;\n        this.yearData = yearHist;\n    },\n    getMapCounts(gene_symbols = null, proteins = null, hosts = null, countries = null, years = null) {\n      axios.post(\"/api/map/by_criteria/\" + this.specimen, {\n        gene_symbol: this.gene_symbols,\n        protein: this.proteins,\n        host: this.hosts,\n        country: this.countries,\n        collection_date: this.years,\n      }).then(response=>{  \n          var results = [['Country', 'Sequences']];\n          results = results.concat(response.data);\n          this.chartData = results;\n      })\n    }\n  }\n};\n</script>\n\n<style>\n.crit {\n    font-size: 75%;\n}\n</style>\n\n"],"sourceRoot":"src/views"}]}