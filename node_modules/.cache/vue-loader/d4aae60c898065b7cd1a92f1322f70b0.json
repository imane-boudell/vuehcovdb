{"remainingRequest":"/var/www/html/vue/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/vue/app/src/views/Search.vue?vue&type=template&id=0f358554&","dependencies":[{"path":"/var/www/html/vue/app/src/views/Search.vue","mtime":1603662442368},{"path":"/var/www/html/vue/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/vue/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/vue/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/vue/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}