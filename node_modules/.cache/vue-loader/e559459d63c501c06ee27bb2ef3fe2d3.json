{"remainingRequest":"/root/vuehcovdb/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/vuehcovdb/src/views/MSA.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/root/vuehcovdb/src/views/MSA.vue","mtime":1631213237116},{"path":"/root/vuehcovdb/node_modules/css-loader/dist/cjs.js","mtime":1631213235664},{"path":"/root/vuehcovdb/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631213236960},{"path":"/root/vuehcovdb/node_modules/postcss-loader/src/index.js","mtime":1631213236264},{"path":"/root/vuehcovdb/node_modules/cache-loader/dist/cjs.js","mtime":1631213235484},{"path":"/root/vuehcovdb/node_modules/vue-loader/lib/index.js","mtime":1631213236960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnN1cGVyLWlmcmFtZS1ob2xkZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOwogIHBhZGRpbmctdG9wOiAzMHB4OwogIGhlaWdodDogMDsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cgouc3VwZXItaWZyYW1lLWhvbGRlciBpZnJhbWUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7CiAgYm90dG9tOiAwOwogIG91dGxpbmU6IDA7Cn0K"},{"version":3,"sources":["MSA.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MSA.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<section style=\"padding: 4rem 2rem\">\n<h5><a href=\"/\">\n  <i class=\"fa fa-home\"></i> Home</a>&nbsp;<i class=\"fas fa-chevron-right\"></i>&nbsp;\n  <i class=\"fa fa-search\"></i> Multiple Sequence Alignment ({{algo.toUpperCase()}})\n</h5>\n<br>\n\n<div v-if=\"isLoadingResult\" style=\"text-align: center\">\n    <br />\n    <hollow-dots-spinner\n        :animation-duration=\"1000\"\n        :dot-size=\"20\"\n        :dots-num=\"3\"\n        color=\"#00d961\"\n        style=\"margin-left: auto; margin-right: auto;\"\n    />\n    <br />\n    <span class=\"badge badge-success\">Loading Results...</span>\n</div>\n<div v-if=\"!isLoadingResult\">\n  <div class=\"super-iframe-holder\">\n    <iframe :srcdoc=\"msaResult\"></iframe>\n  </div>\n</div>\n\n</section>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { HollowDotsSpinner } from 'epic-spinners'\n\nexport default {\n  name: \"MSA\",\n  components: {\n    HollowDotsSpinner\n  },\n  data () {\n    return {\n      algo: '',\n      ids: [],\n      msaResult: null,\n      isLoadingResult: true,\n    }\n  },\n  created () {\n    this.algo = this.$route.query.algo;\n    this.ids = this.$route.query.ids;\n    this.consensus = typeof this.$route.query.consensus !== 'undefined' ? true : false;\n\n    this.fetchData();\n  },\n  updated: function () {\n  },\n  watch: {\n\n  },\n  methods: {\n    fetchData(){\n      this.multipleSequenceAlignment(this.algo, this.ids, this.consensus);\n    },\n    multipleSequenceAlignment(algo, ids, consensus) {\n      axios.post(\"/api/algo/msa/\" + algo + \"?consensus=\" + consensus, ids).then(response=>{\n        if(algo == \"clustalo\") {\n          this.msaResult = \"<pre>\" + response.data + \"</pre>\";\n        } else {\n          this.msaResult = response.data;\n        }\n        this.isLoadingResult = false;\n      })\n    },\n  }\n};\n</script>\n\n<style>\n.super-iframe-holder {\n  position: relative;\n  padding-bottom: 56.25%;\n  padding-top: 30px;\n  height: 0;\n  overflow: hidden;\n}\n\n.super-iframe-holder iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  bottom: 0;\n  outline: 0;\n}\n</style>\n\n"]}]}